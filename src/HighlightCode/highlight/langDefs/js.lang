
Description="Javascript"

Keywords={
  { Id=1,
    List={"abstract", "break", "class", "const", "continue", "debugger",
        "default", "delete", "enum", "export", "extends", "finally",
        "instanceof", "import", "implements", "in", "goto", "native", "package",
        "private", "protected", "public", "super", "throw", "throws",
        "transient", "typeof", "void", "false", "with", "for", "this", "switch", "try",
        "while", "if", "do", "else", "return", "null", "case", "catch", "true", "new",
        "prototype", "var", "function", "namespace","use", "internal", "interface",
        "yields", "let", "get", "set", "of"
    },
  },
  { Id=2,
    List={"boolean", "byte", "char", "double", "float", "int", "long", "short",
        "static", "decimal", "enum", "sbyte", "uint", "ulong", "ushort", "void"},
  },

  -- see OnStateChange below
  { Id=3,
    Regex=[[\/[^*\s/].*?[^\\]/[msixpodualgc]*]],
    Group=0
  },

  { Id=4,
    Regex=[[(\w+)(\s*[:=]\s*function)?\s*\(]],
    Group=1
  },
}

Strings={
  Delimiter=[["|']],
}

IgnoreCase=false

Comments={
  { Block=false,
    Delimiter= { [[\/\/]] },
  },
  { Block=true,
    Nested=false,
    Delimiter= { [[\/\*]],[[\*\/]],}
  }
}

Operators=[[\(|\)|\[|\]|\{|\}|\,|\;|\:|\&|<|>|\!|\=|\/|\*|\%|\+|\-|.]]

-- resolve issue with regex expression which spans strings like "</i>" + VAR + "</i>"
function OnStateChange(oldState, newState, token, groupID)
   if string.sub(token,1,1)=="/" and oldState==HL_STRING and newState==HL_KEYWORD and groupID == 3 then
      return HL_REJECT
   end
   return newState
end